#!/bin/zsh

SHELL_RC="$HOME/.zshrc"

# --- Ask if operator wants to remove existing target variables ---
echo -n "Do you want to remove current target variables? (y/N): "
read answer

if [[ "$answer" == "y" || "$answer" == "Y" ]]; then
    echo "ðŸ§¹ Removing persistent variables from $SHELL_RC ..."
    sed -i '/^export user=/d' "$SHELL_RC"
    sed -i '/^export pass=/d' "$SHELL_RC"
    sed -i '/^export ip=/d' "$SHELL_RC"
    sed -i '/^export domain=/d' "$SHELL_RC"
    sed -i '/^export fqdn=/d' "$SHELL_RC"
    sed -i '/^export dc_host=/d' "$SHELL_RC"

    unset user pass ip domain fqdn dc_host
    source "$SHELL_RC"

    echo "âœ… All target variables have been removed and the shell reloaded."
    echo "Try 'echo \$user' â€” it should now be empty."
    exit 0
fi

# --- Prompt for new variables ---
echo -n "Enter username: "
read user
echo -n "Enter password: "
read pass
echo -n "Enter IP address of Domain Controller: "
read ip

echo -n "Enter domain (optional): "
read domain
echo -n "Enter FQDN (optional): "
read fqdn
echo -n "Enter Domain Controller hostname (dc_host) (optional): "
read dc_host

# --- Clean up old variables first ---
sed -i '/^export user=/d' "$SHELL_RC"
sed -i '/^export pass=/d' "$SHELL_RC"
sed -i '/^export ip=/d' "$SHELL_RC"
sed -i '/^export domain=/d' "$SHELL_RC"
sed -i '/^export fqdn=/d' "$SHELL_RC"
sed -i '/^export dc_host=/d' "$SHELL_RC"

# --- Write new variables with proper escaping ---
{
    printf 'export user=%q\n' "$user"
    printf 'export pass=%q\n' "$pass"
    printf 'export ip=%q\n' "$ip"
    printf 'export domain=%q\n' "$domain"
    printf 'export fqdn=%q\n' "$fqdn"
    printf 'export dc_host=%q\n' "$dc_host"
} >> "$SHELL_RC"

# --- Reload environment ---
source "$SHELL_RC"

# --- Summary ---
echo -e "\n=== Summary of Stored Information ==="
echo "User:        $user"
echo "Password:    $pass"
echo "IP Address:  $ip"
[ -n "$domain" ] && echo "Domain:      $domain"
[ -n "$fqdn" ] && echo "FQDN:        $fqdn"
[ -n "$dc_host" ] && echo "DC Host:     $dc_host"

echo -e "\n"
echo "Variables are active now and will persist across reboots and new shells."
echo "Test them now:"
echo "  echo \$user"
echo "  echo \$pass"
echo "  echo \$ip"
echo "  echo \$domain"
echo "  echo \$fqdn"
echo "  echo \$dc_host"
